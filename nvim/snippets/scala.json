{
  "object": {
    "prefix": "object",
    "body": [
      "object ${1:ObjectName} {",
      "\t${2:}",
      "}"
    ],
    "description": "Object"
  },
  "class": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName} {",
      "\t${2:}",
      "}"
    ],
    "description": "Class"
  },
  "case_class": {
    "prefix": "case_class",
    "body": "case class ${1:CaseClassName}(${2:argName}: ${3:ArgType})",
    "description": "Case class"
  },
  "case_object": {
    "prefix": "case_object",
    "body": "case object ${1:CaseObjectName}",
    "description": "Case object"
  },
  "trait": {
    "prefix": "trait",
    "body": [
      "trait ${1:TraitName} {",
      "\t${2:}",
      "}"
    ],
    "description": "Trait"
  },
  "extends": {
    "prefix": "extends",
    "body": "extends ${1:MyTrait}",
    "description": "Extends"
  },
  "with": {
    "prefix": "with",
    "body": "with ${1:MyTrait}",
    "description": "With"
  },
  "def": {
    "prefix": "def",
    "body": [
      "def ${1:methodName}(${2:argName}: ${3:ArgType}): ${4:ReturnType} = {",
      "\t${5:}",
      "}"
    ],
    "description": "Method"
  },
  "def_short": {
    "prefix": "def_short",
    "body": "def ${1:methodName}(${2:argName}: ${3:ArgType}): ${4:ReturnType} = ${5:}",
    "description": "Method as one-liner"
  },
  "for_yield": {
    "prefix": "for_yield",
    "body": [
      "for {",
      "\t_ <- ${1:}",
      "} yield ${2:()}"
    ],
    "description": "For comprehension"
  },
  "ifelse": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) {",
      "\t",
      "} else {",
      "\t",
      "}"
    ],
    "description": "Branch based on conditions using if/else"
  },
  "match": {
    "prefix": "match",
    "body": [
      "${1:value} match {",
      "\tcase ${2:_} => ${3:}",
      "}"
    ],
    "description": "Branch based on conditions using pattern matching"
  }
}
